# 🌦️ Weather Data ETL Pipeline (Python + Pandas + API + MySQL)
This project demonstrates an end-to-end ETL (Extract, Transform, Load) pipeline that extracts live weather data from the OpenWeatherMap API, transforms the data using Python and Pandas, and loads it into a MySQL database.
---
## 📌 Project Structure
---
## ⚙️ Tech Stack
- Python 🐍
- Pandas 📊
- Requests 🌐
- MySQL 🐬
- OpenWeatherMap API 🌍
---
## 🚀 Features
- Extract current weather data for any city using OpenWeatherMap API
- Transform and clean the data using Pandas
- Load the data into a MySQL database
- Modular and readable code
- Ready for scheduling with Airflow or Cron
---
## 🛠️ Setup Instructions
### 1. Clone the repository
```bash
git clone https://github.com/yourusername/weather-etl-pipeline.git
cd weather-etl-pipeline
pip install -r requirements.txt
API_KEY = "your_openweathermap_api_key"
MYSQL_CONFIG = {
    "host": "localhost",
    "user": "your_mysql_user",
    "password": "your_mysql_password",
    "database": "weather_db"
}
CREATE DATABASE weather_db;
-- Table will be created automatically if not exists (in code)
python weather_etl.py
Let me know if you want a `requirements.txt`, `config.py` template, or `weather_etl.py` boilerplate code as well — I can generate them too!






